package grafosTP2.iu;

import grafosTP2.BFS;
import grafosTP2.DFS;
import grafosTP2.Kruskal;
import grafosTP2.ListaAdjacencia;
import grafosTP2.MatrizAdjacencia;
import grafosTP2.Vertice;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class iuPrincipal extends javax.swing.JFrame {
    Color cor1 = new Color(127,255,0);      //cores de efeito dos botoes
    Color cor2 = new Color(172,255,47);     //
    
    int grafoMatriz[][];
    int grafoDigrafo;
    int ordem;
    
    Vertice lista[];
    String valores[];
    
    MatrizAdjacencia matriz = new MatrizAdjacencia();
    ListaAdjacencia listaAdjacencia = new ListaAdjacencia();
    /**
     * Creates new form iuPrincipal
     */
    public iuPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btn_buscaProf = new javax.swing.JButton();
        btn_buscaLarg = new javax.swing.JButton();
        btn_caminho = new javax.swing.JButton();
        btn_grafConexo = new javax.swing.JButton();
        btn_AGM = new javax.swing.JButton();
        btn_camMin = new javax.swing.JButton();
        tf_Arquivo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_Abrir = new javax.swing.JButton();
        btn_Procurar = new javax.swing.JButton();
        radio_matriz = new javax.swing.JRadioButton();
        radio_lista = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_matriz = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tp_lista = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tf_resultados = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        tfgrafoDigrafo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btn_buscaProf.setBackground(new java.awt.Color(172, 255, 47));
        btn_buscaProf.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_buscaProf.setText("BUSCA EM PROFUNDIDADE");
        btn_buscaProf.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_buscaProfMouseMoved(evt);
            }
        });
        btn_buscaProf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_buscaProfMouseExited(evt);
            }
        });
        btn_buscaProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscaProfActionPerformed(evt);
            }
        });

        btn_buscaLarg.setBackground(new java.awt.Color(172, 255, 47));
        btn_buscaLarg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_buscaLarg.setText("BUSCA EM LARGURA");
        btn_buscaLarg.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_buscaLargMouseMoved(evt);
            }
        });
        btn_buscaLarg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_buscaLargMouseExited(evt);
            }
        });
        btn_buscaLarg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscaLargActionPerformed(evt);
            }
        });

        btn_caminho.setBackground(new java.awt.Color(172, 255, 47));
        btn_caminho.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_caminho.setText("CAMINHO 'u' À 'v'");
        btn_caminho.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_caminhoMouseMoved(evt);
            }
        });
        btn_caminho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_caminhoMouseExited(evt);
            }
        });
        btn_caminho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_caminhoActionPerformed(evt);
            }
        });

        btn_grafConexo.setBackground(new java.awt.Color(172, 255, 47));
        btn_grafConexo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_grafConexo.setText("VERIFICAR GRAFO CONEXO");
        btn_grafConexo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_grafConexoMouseMoved(evt);
            }
        });
        btn_grafConexo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_grafConexoMouseExited(evt);
            }
        });
        btn_grafConexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grafConexoActionPerformed(evt);
            }
        });

        btn_AGM.setBackground(new java.awt.Color(172, 255, 47));
        btn_AGM.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_AGM.setText("ÁRVORE GERADORA MÍNIMA");
        btn_AGM.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_AGMMouseMoved(evt);
            }
        });
        btn_AGM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_AGMMouseExited(evt);
            }
        });
        btn_AGM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AGMActionPerformed(evt);
            }
        });

        btn_camMin.setBackground(new java.awt.Color(172, 255, 47));
        btn_camMin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_camMin.setText("CAMINHO MÍNIMO");
        btn_camMin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_camMinMouseMoved(evt);
            }
        });
        btn_camMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_camMinMouseExited(evt);
            }
        });
        btn_camMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_camMinActionPerformed(evt);
            }
        });

        tf_Arquivo.setBackground(new java.awt.Color(239, 239, 239));
        tf_Arquivo.setSelectionColor(new java.awt.Color(131, 255, 100));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Arquivo:");

        btn_Abrir.setBackground(new java.awt.Color(127, 255, 0));
        btn_Abrir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_Abrir.setText("Abrir");
        btn_Abrir.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_AbrirMouseMoved(evt);
            }
        });
        btn_Abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_AbrirMouseExited(evt);
            }
        });
        btn_Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AbrirActionPerformed(evt);
            }
        });

        btn_Procurar.setBackground(new java.awt.Color(127, 255, 0));
        btn_Procurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lupa.png"))); // NOI18N
        btn_Procurar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_ProcurarMouseMoved(evt);
            }
        });
        btn_Procurar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_ProcurarMouseExited(evt);
            }
        });
        btn_Procurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ProcurarActionPerformed(evt);
            }
        });

        buttonGroup1.add(radio_matriz);
        radio_matriz.setText("Matriz");

        buttonGroup1.add(radio_lista);
        radio_lista.setText("Lista");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Modo de trabalho:");

        jt_matriz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jt_matriz.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jt_matriz);

        tp_lista.setEditable(false);
        jScrollPane3.setViewportView(tp_lista);

        tf_resultados.setEditable(false);
        tf_resultados.setColumns(20);
        tf_resultados.setRows(5);
        jScrollPane4.setViewportView(tf_resultados);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Resultado:");

        tfgrafoDigrafo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tf_Arquivo)
                                .addGap(2, 2, 2)
                                .addComponent(btn_Procurar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(btn_Abrir)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btn_camMin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_AGM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_grafConexo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_caminho, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_buscaLarg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_buscaProf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radio_matriz)
                                            .addComponent(radio_lista, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfgrafoDigrafo)
                        .addGap(0, 711, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_Arquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Procurar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(btn_Abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radio_matriz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radio_lista)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_buscaProf, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_buscaLarg, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_caminho, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_grafConexo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_AGM, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_camMin, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfgrafoDigrafo)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tf_Arquivo.requestFocus();
        radio_matriz.setSelected(true);
        
        btn_buscaProf.setEnabled(false);
        btn_buscaLarg.setEnabled(false);
        btn_camMin.setEnabled(false);
        btn_grafConexo.setEnabled(false);
        btn_AGM.setEnabled(false);
        btn_caminho.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void btn_ProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ProcurarActionPerformed
        JFileChooser chooserArquivo = new JFileChooser();
        chooserArquivo.showOpenDialog(getParent());
        String arquivo = chooserArquivo.getSelectedFile().getAbsolutePath();
        if(!arquivo.endsWith(".txt")){
            JOptionPane.showMessageDialog(null, "Tipo de arquivo não suportado!");
            return;
        }
        tf_Arquivo.setText(arquivo);
    }//GEN-LAST:event_btn_ProcurarActionPerformed

    private void btn_ProcurarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ProcurarMouseExited
        btn_Procurar.setBackground(cor1);
    }//GEN-LAST:event_btn_ProcurarMouseExited

    private void btn_ProcurarMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ProcurarMouseMoved
        btn_Procurar.setBackground(cor2);
    }//GEN-LAST:event_btn_ProcurarMouseMoved

    private void btn_AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AbrirActionPerformed
        BufferedReader br = null, br1 = null;

        try {
            br = new BufferedReader(new FileReader       //lendo txt contendo os grafos
                (tf_Arquivo.getText()));

            br1 = new BufferedReader(new FileReader (tf_Arquivo.getText()));

            matriz.inicia(br);
            listaAdjacencia.iniciaListaAdjacencia(br1);

            grafoMatriz = matriz.getMatriz();
            ordem = matriz.getOrdem();
            lista = listaAdjacencia.getListaAdj();

            if(matriz.grafoDigrafo() == 0){
                tfgrafoDigrafo.setText("Grafo:");
            } else tfgrafoDigrafo.setText("Dígrafo:");

            exibeMatriz(grafoMatriz, ordem);
            exibeLista(lista);
            
            btn_buscaProf.setEnabled(true);
            btn_buscaLarg.setEnabled(true);
            btn_camMin.setEnabled(true);
            btn_grafConexo.setEnabled(true);
            btn_AGM.setEnabled(true);
            btn_caminho.setEnabled(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(iuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                br.close();
            } catch (IOException ex) {
                Logger.getLogger(iuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        JOptionPane.showMessageDialog(null, "Arquivo Carregado!");
    }//GEN-LAST:event_btn_AbrirActionPerformed

    private void btn_AbrirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AbrirMouseExited
        btn_Abrir.setBackground(cor1);
    }//GEN-LAST:event_btn_AbrirMouseExited

    private void btn_AbrirMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AbrirMouseMoved
        btn_Abrir.setBackground(cor2);
    }//GEN-LAST:event_btn_AbrirMouseMoved

    private void btn_camMinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_camMinMouseExited
        btn_camMin.setBackground(cor2);
    }//GEN-LAST:event_btn_camMinMouseExited

    private void btn_camMinMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_camMinMouseMoved
        btn_camMin.setBackground(cor1);
    }//GEN-LAST:event_btn_camMinMouseMoved

    private void btn_AGMMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AGMMouseExited
        btn_AGM.setBackground(cor2);
    }//GEN-LAST:event_btn_AGMMouseExited

    private void btn_AGMMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_AGMMouseMoved
        btn_AGM.setBackground(cor1);
    }//GEN-LAST:event_btn_AGMMouseMoved

    private void btn_grafConexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grafConexoActionPerformed
        DFS dfs = new DFS();

        if(radio_matriz.isSelected())
        dfs.conexoMatriz(grafoMatriz, ordem);
        else
        dfs.conexo(lista);
        
        tf_resultados.setText(dfs.getResultado());
    }//GEN-LAST:event_btn_grafConexoActionPerformed

    private void btn_grafConexoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_grafConexoMouseExited
        btn_grafConexo.setBackground(cor2);
    }//GEN-LAST:event_btn_grafConexoMouseExited

    private void btn_grafConexoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_grafConexoMouseMoved
        btn_grafConexo.setBackground(cor1);
    }//GEN-LAST:event_btn_grafConexoMouseMoved

    private void btn_caminhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_caminhoActionPerformed
        int vert1 = Integer.parseInt(JOptionPane.showInputDialog("Vértice u:"));
        int vert2 = Integer.parseInt(JOptionPane.showInputDialog("Vértice v:"));
        DFS dfs = new DFS();
        BFS bfs = new BFS();

        String opt[] = {"DFS","BFS"};

        int busca = JOptionPane.showOptionDialog(null,
            "Escolha o tipo de BUSCA",
            "DFS x BFS",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            opt,
            0);

        if(radio_matriz.isSelected()){  //matriz
            if(busca == 0){         //DFS
                dfs.caminhoMatriz(vert1, vert2, grafoMatriz, ordem);
                tf_resultados.setText(dfs.getResultado());
            } else{                 //BFS
                bfs.verificaCaminhoMatriz(vert1, vert2, grafoMatriz, ordem);
                tf_resultados.setText(bfs.getResultado());
            }
        }else{                          //lista
            if(busca == 0){             //DFS
                dfs.caminho(lista[vert1], lista[vert2], lista);
                tf_resultados.setText(dfs.getResultado());
            }else{                      //BFS
                bfs.verificaCaminho(lista, lista[vert1], lista[vert2]);
                tf_resultados.setText(bfs.getResultado());
            }
        }
    }//GEN-LAST:event_btn_caminhoActionPerformed

    private void btn_caminhoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_caminhoMouseExited
        btn_caminho.setBackground(cor2);
    }//GEN-LAST:event_btn_caminhoMouseExited

    private void btn_caminhoMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_caminhoMouseMoved
        btn_caminho.setBackground(cor1);
    }//GEN-LAST:event_btn_caminhoMouseMoved

    private void btn_buscaLargActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscaLargActionPerformed
        int vertice = Integer.parseInt(JOptionPane.showInputDialog("Vértice raiz:"));
        BFS bfs = new BFS();

        if(radio_matriz.isSelected()){
            bfs.BFSMatriz(vertice, grafoMatriz, ordem);
            tf_resultados.setText(bfs.getResultado());
        }else{
            bfs.BFS(lista, lista[vertice]);
            tf_resultados.setText(bfs.getResultado());
        }
    }//GEN-LAST:event_btn_buscaLargActionPerformed

    private void btn_buscaLargMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscaLargMouseExited
        btn_buscaLarg.setBackground(cor2);
    }//GEN-LAST:event_btn_buscaLargMouseExited

    private void btn_buscaLargMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscaLargMouseMoved
        btn_buscaLarg.setBackground(cor1);
    }//GEN-LAST:event_btn_buscaLargMouseMoved

    private void btn_buscaProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscaProfActionPerformed
        DFS dfs = new DFS();

        int vetor = Integer.parseInt(JOptionPane.showInputDialog("Valor do vértice raiz:"));

        if(radio_matriz.isSelected()){  //busca em profundidade Matriz
            dfs.executaMatriz(vetor, grafoMatriz, ordem);
            tf_resultados.setText(dfs.getResultado());
        }else{  //busca em profundidade Lista Adjacencia
            dfs.executa(lista[vetor], lista);
            tf_resultados.setText(dfs.getResultado());
        }
    }//GEN-LAST:event_btn_buscaProfActionPerformed

    private void btn_buscaProfMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscaProfMouseExited
        btn_buscaProf.setBackground(cor2);
    }//GEN-LAST:event_btn_buscaProfMouseExited

    private void btn_buscaProfMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscaProfMouseMoved
        btn_buscaProf.setBackground(cor1);
    }//GEN-LAST:event_btn_buscaProfMouseMoved

    private void btn_camMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_camMinActionPerformed
        int vert = Integer.parseInt(JOptionPane.showInputDialog("Vértice raiz:"));
        String opt[] = {"Bellman Ford", "Dijkstra"};
        
        int option = JOptionPane.showOptionDialog(null, 
                "Escolha o algoritmo:", 
                "Bellman x Dijkstra", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                opt, 
                0);
        
        if(radio_matriz.isSelected()){  //Matriz
            if(option == 0){            //Bellman
                matriz.BellmanFord(vert);
                tf_resultados.setText(matriz.getResultado());
            }else{                      //Dijkstra
                matriz.Dijkstra(vert);
                tf_resultados.setText(matriz.getResultado());
            }
        }else{                          //Lista
            if(option == 0){                       //Bellman
                listaAdjacencia.BellmanFord(lista[vert]);
                tf_resultados.setText(listaAdjacencia.getResultado());
            }else{                      //Dijkstra
                listaAdjacencia.Dijkstra(lista[vert]);
                tf_resultados.setText(listaAdjacencia.getResultado());
            }
        }
    }//GEN-LAST:event_btn_camMinActionPerformed

    private void btn_AGMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AGMActionPerformed
        int opcao;
        String opt[] = {"Prim", "Kruskal"};

        opcao = JOptionPane.showOptionDialog(null, 
                "Prim x Kruskal", 
                "Deseja executar por 'Prim' ou 'Kruskal'?", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                opt, 
                0);
        
        if(opcao == 0){ //prim
            
        }else{  //kruskal
            Kruskal krukru = new Kruskal(lista);
            tf_resultados.setText(krukru.getSol());
        }
    }//GEN-LAST:event_btn_AGMActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(iuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(iuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(iuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(iuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new iuPrincipal().setVisible(true);
            }
        });
    }
    
    private void exibeMatriz(int matriz[][], int ordem){
        DefaultTableModel modelo = (DefaultTableModel) jt_matriz.getModel();
        
        modelo.setNumRows(0);       //limpando a tabela
        modelo.setColumnCount(0);   //
        
        Object[] linha = new Object[ordem+1];
        
        modelo.addColumn(" ");
        for(int aux = 0; aux < ordem; aux++){
            modelo.addColumn(aux);
        }
        
        for(int i = 0; i < ordem; i++){
            linha[0] = i;
            for(int j = 0; j < ordem; j++){
                if(matriz[i][j] == Integer.MAX_VALUE)
                    linha[j+1] = "∞";
                else linha[j+1] = matriz[i][j];
            }
            modelo.addRow(linha);
        }
    }

    private void exibeLista(Vertice listaAdj[]){
        int aux = 0;
        String texto = "";
        for (Vertice vertice : listaAdj) {
            texto += aux + " -> "; 
            aux++;
            for (String adjacencia : vertice.getAdjacencia()) {
                String impressao[] = adjacencia.split(" ");
                texto += impressao[0]+", "+impressao[1]+" - ";
            } texto += "//\n";
        }texto += "\n";
        
        tp_lista.setText(texto);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AGM;
    private javax.swing.JButton btn_Abrir;
    private javax.swing.JButton btn_Procurar;
    private javax.swing.JButton btn_buscaLarg;
    private javax.swing.JButton btn_buscaProf;
    private javax.swing.JButton btn_camMin;
    private javax.swing.JButton btn_caminho;
    private javax.swing.JButton btn_grafConexo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jt_matriz;
    private javax.swing.JRadioButton radio_lista;
    private javax.swing.JRadioButton radio_matriz;
    private javax.swing.JTextField tf_Arquivo;
    private javax.swing.JTextArea tf_resultados;
    private javax.swing.JLabel tfgrafoDigrafo;
    private javax.swing.JTextPane tp_lista;
    // End of variables declaration//GEN-END:variables
}
